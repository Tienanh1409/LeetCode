class Solution:
    def isSubtree(self, root: Optional[TreeNode], subRoot: Optional[TreeNode]) -> bool:
        def isSameTree(p, q):
            if p is None and q is None:
                return True
            
            if p is None or q is None:
                return False
            
            if p.val != q.val:
                return False
            
            return isSameTree(p.left, q.left) and isSameTree(p.right, q.right)
        
        i = 0
        if not root:
            return False
        
        if root.val == subRoot.val:
            if(isSameTree(root, subRoot)):
                return True
        i += 1
        return self.isSubtree(root.left, subRoot) or self.isSubtree(root.right, subRoot)
